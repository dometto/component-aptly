---
- name: Use aptly to serve apt packages
  hosts: localhost
  gather_facts: true
  pre_tasks:
    - name: Get Service Status
      systemd:
        name: nginx
      register: nginx_status

    - name: Stop if nginx is not installed
      fail:
        msg: The nginx service must be installed and active for the aptly component to work.
      when: nginx_status.status.ActiveState != 'active'

    - name: Set aptly user
      set_fact:
        aptly_user: "{{ aptly_user | default('aptly') }}"

    - name: Debug aptly_packages
      debug:
        var: aptly_packages

    - name: Debug aptly_repositories
      debug:
        var: aptly_repositories

    - name: Set aptly packages
      set_fact:
        aptly__packages: "{{ aptly__packages|d([]) + [item|from_yaml] }}"
      loop: "{{ aptly_packages.split('\\n') | list }}"

    - name: Set aptly repositories
      set_fact:
        repos: "{{ repos|d([]) + [item|from_yaml] }}"
      loop: "{{ aptly_repositories.split('\\n') | list }}"

  roles:
    - role: ext/hetzner.aptly
      vars:
        aptly__user: "{{ aptly_user }}"
        aptly__gpg_private_key: "{{ aptly_gpg_private_key }}"
        aptly__gpg_public_key: "{{ aptly_gpg_public_key }}"
        aptly__repositories: "{{ repos }}"
          
  tasks:
    - name: Make aptly files readable for nginx
      block:
        - name: Set group www-data
          file:
            path: "{{ item }}"
            owner: aptly
            group: www-data
            recurse: false
          with_items:
            - /srv/aptly
            - /srv/aptly/.aptly
        - name: Setgid www-data
          file:
            path: /srv/aptly/.aptly/public
            owner: aptly
            mode: 02750
            group: www-data

    - name: Add packages to repositories
      become: true
      become_user: "{{ aptly_user }}"
      shell: |
        aptly repo add -architectures="{{ item.architectures | join(',') }}" {{ item.name }}-{{ item.component }} {{ item.packages }} \
          && aptly publish -batch -architectures="{{ item.architectures | join(',') }}" update {{ item.name }}
      register: aptly_add
      changed_when: "'added' in aptly_add.stdout"
      tags: molecule-idempotence-notest
      with_items: "{{ aptly__packages }}"

    - name: Create nginx location block
      copy:
        src: files/nginx/aptly.conf
        dest: /etc/nginx/app-location-conf.d/aptly.conf
        mode: 0644
        force: false
      notify: Restart nginx
  
  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted
